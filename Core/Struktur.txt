namespace Core.Log
{
    public static class LoggingManager
    {
        // Log methods for both errors and messages
    }

    public class FileLoggingTarget
    {
        // Log methods for file-specific logging
    }

    public class ConsoleLoggingTarget
    {
        // Log methods for console-specific logging
    }
}

namespace Core.Helper
{
    public static class FileHelper
    {
        // Methods for file operations like SaveTextFile, LoadTextFile, SaveJsonFile, LoadJsonFile, etc.
    }

    public static class DatabaseHelper
    {
        // Methods for common database operations like Insert, Update, Delete, Load using IDatabase<T>
    }
}

namespace Core.Manager
{
    public class ConfigManager : IDisposable
    {
        // Configuration management and observing
    }

    public class ConfigObserver
    {
        // Handling configuration change notifications
    }
}

namespace Core.Database
{
    public abstract class BaseDatabase<T> : IDatabase<T> where T : BaseModel, new()
    {
        // Common database operations like Add, Delete, Update using IDatabase<T>
    }

    public class DatabaseSelector<T> where T : BaseModel, new()
    {
        // Selects and handles different types of databases (Xml, Json, Binary)
    }

    public class XmlDatabase<T> : BaseDatabase<T>, IDatabase<T> where T : BaseModel, new()
    {
        // Xml specific database operations
    }

    public class JsonDatabase<T> : BaseDatabase<T>, IDatabase<T> where T : BaseModel, new()
    {
        // Json specific database operations
    }

    public class BinaryDatabase<T> : BaseDatabase<T>, IDatabase<T> where T : BaseModel, new()
    {
        // Binary specific database operations
    }
}

namespace Core.Interfaces
{
    public interface ILoggingTarget
    {
        // Logging interface for different logging targets
    }

    public interface IDatabase<T>
    {
        // Database interface for common database operations
    }

    public interface IConfigObserver
    {
        // Interface for observing configuration changes
    }
}

namespace Core.Model
{
    public abstract class BaseModel
    {
        // Base model class with ID and timestamp properties
    }
}
